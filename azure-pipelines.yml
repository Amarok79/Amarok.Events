trigger:
- master
pr:
- master

pool:
  vmImage: 'windows-latest'

steps:

# Prepare

- task: DotNetCoreCLI@2
  displayName: 'Restoring packages...'
  inputs:
    command: 'restore'
    feedsToUse: 'select'


# Build and Test (Debug) with Sonar

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'SonarCloud: Preparing...'
  inputs:
    SonarCloud: Sonar
    organization: 'amarok79-github'
    projectKey: 'Amarok79_Events'
    projectName: Amarok.Events

- task: DotNetCoreCLI@2
  displayName: 'Building Debug...'
  inputs:
    command: 'build'
    arguments: '--configuration Debug --no-incremental'

- task: DotNetCoreCLI@2
  displayName: 'Running tests...'
  inputs:
    command: 'test'
    arguments: '--no-build --collect "Code Coverage"'

- task: SonarCloudAnalyze@1
  displayName: 'SonarCloud: Analyzing...'

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'SonarCloud: Publishing...'


# Run Mutation Tests

- task: DotNetCoreCLI@2
  displayName: 'Stryker: Installing...'
  inputs:
    command: custom
    custom: tool
    arguments: install dotnet-stryker --tool-path $(Agent.BuildDirectory)/tools

- task: Powershell@2
  displayName: 'Stryker: Running...'
  inputs:
    workingDirectory: $(Build.SourcesDirectory)
    targetType: 'inline'
    pwsh: true
    script: $(Agent.BuildDirectory)/tools/dotnet-stryker
 
- task: PublishMutationReport@0
  displayName: 'Stryker: Publishing...'
  inputs:
    reportPattern: '**/mutation-report.html'


# Build and Publish (Release)

- script: 'git clean -d -x -f'
  displayName: 'Cleaning up...'

- task: DotNetCoreCLI@2
  displayName: 'Building Release...'
  inputs:
    command: 'build'
    arguments: '--configuration Release --no-incremental'

- task: CopyFiles@2
  displayName: 'Copying NuGet packages...'
  inputs:
    SourceFolder: 'bin\lib'
    Contents: '*.nupkg'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Uploading artifacts...'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
